---
- hosts: haraka
  remote_user: root

  vars:
    # Timezone
    timezone: 'Europe/Paris'

  tasks:



    #########################
    # User management       
    #########################

    # First, create users
    - name: Create user {{ user1 }}
      user: name={{ user1 }}
            comment="{{ user1 }} user"
            shell=/bin/bash
            password={{ password }}

    - name: Create user {{ user2 }}
      user: name={{ user2 }}
            comment="{{ user2 }} user"
            shell=/bin/bash
            password={{ password }}

    - name: Kill user's processes
      command: pkill -u user
      ignore_errors: yes

    - name: Delete user "user"
      user: name=user state=absent remove=yes force=yes

    - name: Force-change password {{ user1 }}
      command: /usr/bin/chage -d 0 {{ user1 }}

    - name: Force-change password for {{ user2 }}
      command: /usr/bin/chage -d 0 {{ user2 }}

    - name: Verify Sudo
      apt: name=sudo state=latest

    - name: Add {{ user1 }} to sudoers
      template: src=templates/sudoers-user1.j2
                dest=/etc/sudoers.d/{{ user1 }}-sudoer
                validate='visudo -cf %s'

    - name: Add {{ user2 }} to sudoers
      template: src=templates/sudoers-user2.j2
                dest=/etc/sudoers.d/{{ user2 }}-sudoer
                validate='visudo -cf %s'

    - name: Add my public key to {{ user2 }}
      authorized_key: user={{ user2 }}
                      key="{{ lookup('file', '~/.ssh/id_rsa.pub') }}"

     #########################
     # Time Management       
     #########################

    - name: Set local timezone
      copy: content={{ timezone }}
            dest=/etc/timezone
      notify: update tzdata

    - name: Install NTP
      apt: name=ntp state=present
          update_cache=yes

    - name: Start NTP service
      service: name=ntp state=started enabled=true

    ##########################
    # Security               
    ##########################

    - name: Install fail2ban
      apt: name=fail2ban state=present

    - name: Start fail2ban service
      service: name=fail2ban state=started enabled=true

    - name: Copy iptables rules
      copy: src=files/iptables.up
            dest=/etc/iptables.up
      notify: reload iptables

    - name: Copy iptables init script # To load iptables on server restart
      copy: src=files/iptables-script
            dest=/etc/network/if-pre-up.d/iptables
            mode=0755

    - name: Disallow root SSH access
      action: lineinfile dest=/etc/ssh/sshd_config regexp="^PermitRootLogin" line="PermitRootLogin no" state=present
      notify: Restart sshd

    - name: Install Spamassassin
      apt: name=spamassassin state=latest

    - name: Install unattended-upgrades
      apt: name=unattended-upgrades state=present

    ##########################
    # Software               
    ##########################

    - name: Update packages
      apt: update_cache=yes upgrade=yes

    - name: Install Git
      apt: name=git state=present

    - name: Install Ruby
      apt: name=ruby state=present

    - name: Install Vim
      apt: name=vim state=present

    - name: Install curL
      apt: name=curl state=present
      when: ansible_os_family == "Debian" and ansible_lsb.major_release|int <=7

    - name: Curl setup
      shell: curl -sL https://deb.nodesource.com/setup | bash -
      when: ansible_os_family == "Debian" and ansible_lsb.major_release|int <=7

    - name: Install build-essential
      apt: name=build-essential state=present
      
    - name: Install Node.JS
      apt: name=nodejs state=present

    - name: Install Node.JS-legacy
      apt: name=nodejs-legacy state=present
      when: ansible_os_family == "Debian" and ansible_lsb.major_release|int >7

    - name: Install Node.JS-NPM
      apt: name=npm state=present
      when: ansible_os_family == "Debian" and ansible_lsb.major_release|int >7

    - name: Make alias node
      file: src=/usr/bin/nodejs dest=/usr/bin/node state=link 
      when: ansible_os_family == "Debian" and ansible_lsb.major_release|int >7

    - name: Remove Exim4
      apt: name=exim4* state=absent

    - name: Install Haraka
      npm: name=Haraka global=yes state=latest

    - name: Install Forever
      npm: name=forever global=yes state=latest

    - name: Prepare folders for Haraka Server
      file: path=/haraka state=directory mode="777" recurse=yes

    - name: Generate Haraka-Server
      command: haraka -i /haraka/server

    - name: Download rcpt_to.alias_forward.js
      get_url: url=https://raw.githubusercontent.com/gcollic/haraka-alias-forward/master/plugins/rcpt_to.alias_forward.js dest=/haraka/server/plugins/rcpt_to.alias_forward.js mode=0777

    - name: Copy plugins config
      copy: src=files/plugins 
            dest=/haraka/server/config/plugins
            mode=0777
    - name: Create /haraka/haraka-list folders
      file: path=/haraka/haraka-list state=directory mode="777"

    - name: Init git repo
      command: git init /haraka/haraka-list --bare   

    #- name: Import hook
    - name: Import hook post-receive
      copy: src=files/post-receive
            dest=/haraka/haraka-list/hooks/post-receive
            mode=777

    - name: Start Haraka for Debian 8++
      command: /usr/local/bin/forever start /usr/local/bin/haraka -c /haraka/server/
      when: ansible_os_family == "Debian" and ansible_lsb.major_release|int >7

    - name: Start Haraka for Debian 7-
      command: /usr/bin/forever start /usr/bin/haraka -c /haraka/server/ 
      when: ansible_os_family == "Debian" and ansible_lsb.major_release|int <=7
    
    #Adding forever to the crontab
    
    - name: Crontab Haraka for Debian 8++
      cron: name="Forever haraka" special_time=reboot job="/usr/local/bin/forever start /usr/local/bin/haraka -c /haraka/server"
      when: ansible_os_family == "Debian" and ansible_lsb.major_release|int >7
    
    - name: Crontab Haraka for Debian 7-
      cron: name="Forever haraka" special_time=reboot job="/usr/bin/forever start /usr/bin/haraka -c /haraka/server"
      when: ansible_os_family == "Debian" and ansible_lsb.major_release|int <=7

    - name: Ensure permissions
      file: path=/haraka state=directory mode="777" recurse=yes

  handlers:
  - name: Restart sshd
    action: service name=ssh state=restarted
  - name: reload iptables
    action: shell /sbin/iptables-restore < /etc/iptables.up
  - name: update tzdata
    command: /usr/sbin/dpkg-reconfigure --frontend noninteractive tzdata
